<?php

namespace Proxies\__CG__\Locazik\AnnonceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Categorie extends \Locazik\AnnonceBundle\Entity\Categorie implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'annonces', 'id', 'categorieName', 'categorieUrl', 'categorieDesc', 'parent', 'children', 'isOnline', 'dateCreation', 'dateUpdate');
        }

        return array('__isInitialized__', 'annonces', 'id', 'categorieName', 'categorieUrl', 'categorieDesc', 'parent', 'children', 'isOnline', 'dateCreation', 'dateUpdate');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Categorie $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorieName($categorieName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorieName', array($categorieName));

        return parent::setCategorieName($categorieName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategorieName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategorieName', array());

        return parent::getCategorieName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorieDesc($categorieDesc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorieDesc', array($categorieDesc));

        return parent::setCategorieDesc($categorieDesc);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategorieDesc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategorieDesc', array());

        return parent::getCategorieDesc();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation($dateCreation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', array($dateCreation));

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', array());

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpdate($dateUpdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpdate', array($dateUpdate));

        return parent::setDateUpdate($dateUpdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpdate', array());

        return parent::getDateUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOnline($isOnline)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOnline', array($isOnline));

        return parent::setIsOnline($isOnline);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOnline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOnline', array());

        return parent::getIsOnline();
    }

    /**
     * {@inheritDoc}
     */
    public function removeAnnonce(\Locazik\AnnonceBundle\Entity\Annonce $annonce)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAnnonce', array($annonce));

        return parent::removeAnnonce($annonce);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnonces()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnonces', array());

        return parent::getAnnonces();
    }

    /**
     * {@inheritDoc}
     */
    public function addAnnonce(\Locazik\AnnonceBundle\Entity\Annonce $annonces)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAnnonce', array($annonces));

        return parent::addAnnonce($annonces);
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\Locazik\AnnonceBundle\Entity\Categorie $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\Locazik\AnnonceBundle\Entity\Categorie $children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', array($children));

        return parent::addChild($children);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChild(\Locazik\AnnonceBundle\Entity\Categorie $children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChild', array($children));

        return parent::removeChild($children);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array());

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorieUrl($categorieUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorieUrl', array($categorieUrl));

        return parent::setCategorieUrl($categorieUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategorieUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategorieUrl', array());

        return parent::getCategorieUrl();
    }

}
